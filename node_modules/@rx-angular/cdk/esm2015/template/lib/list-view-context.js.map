{"version":3,"file":"list-view-context.js","sourceRoot":"","sources":["../../../../../../libs/cdk/template/src/lib/list-view-context.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,eAAe,EAAc,aAAa,EAAE,MAAM,MAAM,CAAC;AAClE,OAAO,EAAE,oBAAoB,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,gBAAgB,CAAC;AAclE,MAAM,YAAY,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,KAAK,KAAK,CAAC,CAAC;AACvD,MAAM,WAAW,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,KAAK,KAAK,KAAK,GAAG,CAAC,CAAC;AAC9D,MAAM,WAAW,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC;AAE1D,MAAM,OAAO,wBAAwB;IAsFnC,YAAY,IAAO,EAAE,WAA8C;QAhF1D,UAAK,GAAG,IAAI,aAAa,CAAI,CAAC,CAAC,CAAC;QACzC,UAAK,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;QAKjB,cAAS,GAAG,IAAI,eAAe,CAA4B;YAC1E,KAAK,EAAE,CAAC,CAAC;YACT,KAAK,EAAE,CAAC,CAAC;SACV,CAAC,CAAC;QAqFH,WAAM,GAAG,CAAC,KAAU,EAAmB,EAAE;YACvC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAI,KAAa,CAAC,CAAC,CAAC;QACnD,CAAC,CAAC;QAfA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,WAAW,EAAE;YACf,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;SACjC;IACH,CAAC;IA1ED,IAAI,SAAS,CAAC,SAAY;QACxB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC7B,CAAC;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC;IACzC,CAAC;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC;IACzC,CAAC;IAED,IAAI,KAAK;QACP,OAAO,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;IACjD,CAAC;IAED,IAAI,IAAI;QACN,OAAO,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;IAChD,CAAC;IAED,IAAI,IAAI;QACN,OAAO,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;IAChD,CAAC;IAED,IAAI,GAAG;QACL,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;IACpB,CAAC;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,oBAAoB,EAAE,CAAC,CAAC;IACrE,CAAC;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,oBAAoB,EAAE,CAAC,CAAC;IACrE,CAAC;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE,oBAAoB,EAAE,CAAC,CAAC;IACxE,CAAC;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE,oBAAoB,EAAE,CAAC,CAAC;IACvE,CAAC;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE,oBAAoB,EAAE,CAAC,CAAC;IACvE,CAAC;IAED,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IAC/C,CAAC;IASD,aAAa,CAAC,QAA4C;QACxD,IAAI,CAAC,SAAS,CAAC,IAAI,iCACd,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,GACzB,QAAQ,EACX,CAAC;IACL,CAAC;CAKF","sourcesContent":["import { NgIterable } from '@angular/core';\nimport { BehaviorSubject, Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map, pluck } from 'rxjs/operators';\n\nexport interface RxListViewComputedContext {\n  index: number;\n  count: number;\n}\n\nexport interface RxListViewContext<T, U = RxListViewComputedContext>\n  extends RxListViewComputedContext {\n  $implicit: T;\n  item$: Observable<T>;\n  updateContext(newProps: Partial<U>): void;\n}\n\nconst computeFirst = ({ count, index }) => index === 0;\nconst computeLast = ({ count, index }) => index === count - 1;\nconst computeEven = ({ count, index }) => index % 2 === 0;\n\nexport class RxDefaultListViewContext<\n  T,\n  U extends NgIterable<T> = NgIterable<T>,\n  K = keyof T\n> implements RxListViewContext<T>\n{\n  readonly _item = new ReplaySubject<T>(1);\n  item$ = this._item.asObservable();\n  private _$implicit: T;\n  private _$complete: boolean;\n  private _$error: false | Error;\n  private _$suspense: any;\n  private readonly _context$ = new BehaviorSubject<RxListViewComputedContext>({\n    index: -1,\n    count: -1,\n  });\n\n  set $implicit($implicit: T) {\n    this._$implicit = $implicit;\n    this._item.next($implicit);\n  }\n\n  get $implicit(): T {\n    return this._$implicit;\n  }\n\n  get $complete(): boolean {\n    return this._$complete;\n  }\n\n  get $error(): false | Error {\n    return this._$error;\n  }\n\n  get $suspense(): any {\n    return this._$suspense;\n  }\n\n  get index(): number {\n    return this._context$.getValue().index;\n  }\n\n  get count(): number {\n    return this._context$.getValue().count;\n  }\n\n  get first(): boolean {\n    return computeFirst(this._context$.getValue());\n  }\n\n  get last(): boolean {\n    return computeLast(this._context$.getValue());\n  }\n\n  get even(): boolean {\n    return computeEven(this._context$.getValue());\n  }\n\n  get odd(): boolean {\n    return !this.even;\n  }\n\n  get index$(): Observable<number> {\n    return this._context$.pipe(pluck('index'), distinctUntilChanged());\n  }\n\n  get count$(): Observable<number> {\n    return this._context$.pipe(pluck('count'), distinctUntilChanged());\n  }\n\n  get first$(): Observable<boolean> {\n    return this._context$.pipe(map(computeFirst), distinctUntilChanged());\n  }\n\n  get last$(): Observable<boolean> {\n    return this._context$.pipe(map(computeLast), distinctUntilChanged());\n  }\n\n  get even$(): Observable<boolean> {\n    return this._context$.pipe(map(computeEven), distinctUntilChanged());\n  }\n\n  get odd$(): Observable<boolean> {\n    return this.even$.pipe(map((even) => !even));\n  }\n\n  constructor(item: T, customProps?: { count: number; index: number }) {\n    this.$implicit = item;\n    if (customProps) {\n      this.updateContext(customProps);\n    }\n  }\n\n  updateContext(newProps: Partial<RxListViewComputedContext>): void {\n    this._context$.next({\n      ...this._context$.getValue(),\n      ...newProps,\n    });\n  }\n\n  select = (props: K[]): Observable<any> => {\n    return this.item$.pipe(pluck(...(props as any)));\n  };\n}\n"]}