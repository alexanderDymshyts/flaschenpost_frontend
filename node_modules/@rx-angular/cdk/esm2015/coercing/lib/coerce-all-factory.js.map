{"version":3,"file":"coerce-all-factory.js","sourceRoot":"","sources":["../../../../../../libs/cdk/coercing/src/lib/coerce-all-factory.ts"],"names":[],"mappings":"AAAA,OAAO,EAAiD,OAAO,EAAE,MAAM,MAAM,CAAC;AAC9E,OAAO,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAC3C,OAAO,EAAE,kBAAkB,EAAE,MAAM,gCAAgC,CAAC;AAEpE;;;;;;;;;;;;GAYG;AACH,MAAM,UAAU,gBAAgB,CAC9B,cAAsD,EACtD,eAAyD;IAKzD,MAAM,kBAAkB,GAAG,cAAc,CAAC,CAAC,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,IAAI,OAAO,EAAE,CAAC;IAC7E,eAAe,GAAG,eAAe,IAAK,SAAS,EAAU,CAAC;IAC1D,MAAM,OAAO,GAAG,kBAAkB,CAAC,IAAI,CACrC,kBAAkB,CAAC,eAAsB,CAAC,CAC1B,CAAC;IAEnB,OAAO;QACL,IAAI,CAAC,UAAkC;YACrC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACtC,CAAC;QACD,OAAO;KACR,CAAC;AACJ,CAAC","sourcesContent":["import { Observable, ObservableInput, OperatorFunction, Subject } from 'rxjs';\nimport { switchAll } from 'rxjs/operators';\nimport { coerceDistinctWith } from './coerceDistinctObservableWith';\n\n/**\n * @internal\n *\n * A factory function returning an object to handle the process of merging Observable next notifications into one\n *   Observable. This API takes away the clumsy handling of static values and Observable, reduces the number of\n *   emissions by:\n * - only merging distinct Observables\n * - only emit distingt values of the merged result\n *\n * You can next a Observable of `U` multiple times and merge them into the Observable exposed under one optimized\n *   `values$`\n *\n */\nexport function coerceAllFactory<U, R = U>(\n  subjectFactory?: () => Subject<ObservableInput<U> | U>,\n  flattenOperator?: OperatorFunction<ObservableInput<U>, R>\n): {\n  values$: Observable<R>;\n  next(observable: ObservableInput<U> | U): void;\n} {\n  const observablesSubject = subjectFactory ? subjectFactory() : new Subject();\n  flattenOperator = flattenOperator || (switchAll() as any);\n  const values$ = observablesSubject.pipe(\n    coerceDistinctWith(flattenOperator as any)\n  ) as Observable<R>;\n\n  return {\n    next(observable: ObservableInput<U> | U) {\n      observablesSubject.next(observable);\n    },\n    values$,\n  };\n}\n"]}