{"version":3,"file":"timeout.js","sourceRoot":"","sources":["../../../../../../../libs/cdk/internals/core/src/lib/timeout.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAc,MAAM,MAAM,CAAC;AAC9C,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAClD,OAAO,EAAE,mBAAmB,EAAE,MAAM,0BAA0B,CAAC;AAE/D;;;;GAIG;AACH,SAAS,OAAO,CACd,QAAgB,CAAC;IAEjB,OAAO,IAAI,UAAU,CAAS,CAAC,UAA8B,EAAE,EAAE;QAC/D,MAAM,OAAO,GAAG,mBAAmB,CAAC,YAAY,CAAC,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;QACnF,OAAO,GAAG,EAAE;YACV,mBAAmB,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,CAAC;QAC/C,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,oBAAoB;IAClC,OAAO,CAAC,EAAiB,EAAE,EAAE,CAAC,EAAE,CAAC,IAAI,CACnC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAC3C,CAAA;AACH,CAAC","sourcesContent":["import { Observable, Subscriber } from 'rxjs';\nimport { mapTo, concatMap } from 'rxjs/operators';\nimport { getZoneUnPatchedApi } from './get-zone-unpatched-api';\n\n/**\n * Creates an Observable that emits after a setTimeout.\n * The timeout it unpatched to not avoid zone pollution\n * @param setTimeoutFn\n */\nfunction timeout(\n  delay: number = 0\n) {\n  return new Observable<number>((subscriber: Subscriber<number>) => {\n    const asyncID = getZoneUnPatchedApi('setTimeout')(() => subscriber.next(0), delay);\n    return () => {\n      getZoneUnPatchedApi('clearTimeout')(asyncID);\n    };\n  });\n}\n\n/**\n *\n */\nexport function timeoutSwitchMapWith<T>() {\n  return (o$: Observable<T>) => o$.pipe(\n    concatMap((v) => timeout().pipe(mapTo(v)))\n  )\n}\n"]}