import { Subject } from 'rxjs';
import { mergeAll, share } from 'rxjs/operators';
import { coerceAllFactory } from '@rx-angular/cdk/coercing';
/**
 * @internal
 *
 * A factory function returning an object to handle the process of switching templates by Notification channel.
 * You can next a Observable of `RxNotification` multiple times and merge them into the Observable exposed under `trigger$`
 *
 */
export function templateTriggerHandling() {
    const hotFlattened = coerceAllFactory(() => new Subject(), mergeAll());
    return {
        next(templateName) {
            hotFlattened.next(templateName);
        },
        trigger$: hotFlattened.values$.pipe(share()),
    };
}
//# sourceMappingURL=template-trigger-handling.js.map