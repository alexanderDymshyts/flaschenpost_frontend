{"version":3,"file":"dictionaryToArray.js","sourceRoot":"","sources":["../../../../../../../libs/cdk/transformations/src/lib/object/dictionaryToArray.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,aAAa,EAAE,MAAM,sBAAsB,CAAC;AAEhE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAmDG;AACH,MAAM,UAAU,iBAAiB,CAAI,UAAgC;IACnE,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE;QAC1B,OAAO,UAAU,CAAC;KACnB;IAED,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE;QAC9B,OAAO,CAAC,IAAI,CAAC,sCAAsC,CAAC,CAAC;QACrD,OAAO,EAAE,CAAC;KACX;IAED,OAAO,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;AACnC,CAAC","sourcesContent":["import { isDefined, isObjectGuard } from '../_internals/guards';\n\n/**\n * @description\n * Converts a dictionary of type {[key: string]: T} to array T[].\n *\n * @example\n *\n * const creaturesDictionary = {\n *   '1': {id: 1, type: 'cat'},\n *   '2': {id: 2, type: 'dog'},\n *   '3': {id: 3, type: 'parrot'}\n * };\n *\n * const creaturesArray = dictionaryToArray(creaturesDictionary);\n *\n * // creaturesArray will be:\n * // [{id: 1, type: 'cat'}, {id: 2, type: 'dog'}, {id: 3, type: 'parrot'}];\n *\n * @example\n * // Usage with RxState\n *\n * export class ListComponent {\n *    readonly removeName$ = new Subject();\n *\n *    constructor(\n *      private state: RxState<ComponentState>,\n *      private api: ApiService\n *    ) {\n *      // Reactive implementation\n *      state.connect(\n *        'creatures',\n *        this.api.creaturesDictionary$,\n *        (_, creatures) => {\n *            return dictionaryToArray(creatures);\n *        }\n *      );\n *    }\n *\n *    // Imperative implementation\n *    removeName(): void {\n *      this.api.creaturesDictionary$.pipe(\n *        // subscription handling logic\n *      ).subscribe(\n *        dictionary => this.set({creatures: dictionaryToArray(dictionary)})\n *      );\n *    }\n * }\n *\n * @returns T[];\n *\n * @docsPage dictionaryToArray\n * @docsCategory transformation-helpers\n */\nexport function dictionaryToArray<T>(dictionary: { [key: string]: T }): T[] {\n  if (!isDefined(dictionary)) {\n    return dictionary;\n  }\n\n  if (!isObjectGuard(dictionary)) {\n    console.warn(`DictionaryToArray: unexpected input.`);\n    return [];\n  }\n\n  return Object.values(dictionary);\n}\n"]}