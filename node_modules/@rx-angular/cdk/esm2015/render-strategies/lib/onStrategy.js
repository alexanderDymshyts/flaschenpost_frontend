import { Observable, throwError } from 'rxjs';
import { catchError, map, take } from 'rxjs/operators';
/**
 * @internal
 *
 * @param value
 * @param strategy
 * @param workFactory
 * @param options
 */
export function onStrategy(value, strategy, workFactory, options = {}) {
    return new Observable((subscriber) => {
        subscriber.next(value);
    }).pipe(strategy.behavior({
        work: () => workFactory(value, strategy.work, options),
        scope: options.scope || {},
        ngZone: options.ngZone,
    }), catchError((error) => throwError(() => [error, value])), map(() => value), take(1));
}
//# sourceMappingURL=onStrategy.js.map