{"version":3,"file":"native-strategies.js","sourceRoot":"","sources":["../../../../../../libs/cdk/render-strategies/src/lib/native-strategies.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACvC,OAAO,EAAE,UAAU,EAAE,MAAM,MAAM,CAAC;AAClC,OAAO,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;AACrC,OAAO,EAAE,YAAY,EAAE,MAAM,4BAA4B,CAAC;AAM1D,OAAO,EAAE,mBAAmB,EAAE,MAAM,gCAAgC,CAAC;AAErE,MAAM,kBAAkB,GAAG,GAAG,EAAE,CAC9B,IAAI,UAAU,CAAS,CAAC,UAAU,EAAE,EAAE;IACpC,mDAAmD;IACnD,MAAM,EAAE,GAAG,mBAAmB,CAAC,uBAAuB,CAAC,CAAC,GAAG,EAAE;QAC3D,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACnB,UAAU,CAAC,QAAQ,EAAE,CAAC;IACxB,CAAC,CAAC,CAAC;IACH,OAAO,GAAG,EAAE;QACV,mDAAmD;QACnD,mBAAmB,CAAC,sBAAsB,CAAC,CAAC,EAAE,CAAC,CAAC;IAClD,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC;AAEL,MAAM,gBAAgB,GAA0B;IAC9C,IAAI,EAAE,OAAO;IACb,IAAI,EAAE,CAAC,KAAK,EAAE,CAAC,EAAE,YAAY,EAAE,EAAE;QAC/B,KAAK,CAAC,aAAa,EAAE,CAAC;IACxB,CAAC;IACD,QAAQ,EACN,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,EAAE,CAC5B,CAAC,EAAE,EAAE,EAAE,CACL,EAAE,CAAC,IAAI,CACL,YAAY,CAAC,kBAAkB,EAAE,EAAE,KAAgC,CAAC,EACpE,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CACxD;CACN,CAAC;AAEF,MAAM,eAAe,GAA0B;IAC7C,IAAI,EAAE,MAAM;IACZ,IAAI,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC;IAClB,QAAQ,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE;CAC3B,CAAC;AAEF,MAAM,iBAAiB,GAA0B;IAC/C,IAAI,EAAE,QAAQ;IACd,IAAI,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,YAAY,EAAE;IACrC,QAAQ,EACN,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE,EAAE,CACrB,CAAC,EAAE,EAAE,EAAE,CACL,EAAE,CAAC,IAAI,CACL,GAAG,CAAC,GAAG,EAAE,CACP,MAAM,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE;QACjC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC;QAC1B,CAAC,CAAC,IAAI,EAAE,CACX,CACF;CACN,CAAC;AAEF;;;GAGG;AACH,MAAM,iBAAiB,mCAClB,iBAAiB,KACpB,IAAI,EAAE,QAAQ,GACf,CAAC;AAIF,MAAM,CAAC,MAAM,oBAAoB,GAAuB;IACtD,MAAM,EAAE,iBAAiB;IACzB,MAAM,EAAE,iBAAiB;IACzB,IAAI,EAAE,eAAe;IACrB,KAAK,EAAE,gBAAgB;CACxB,CAAC","sourcesContent":["import { NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { coalesceWith } from '@rx-angular/cdk/coalescing';\nimport {\n  RxCustomStrategyCredentials,\n  RxNativeStrategyNames,\n  RxStrategyCredentials,\n} from './model';\nimport { getZoneUnPatchedApi } from '@rx-angular/cdk/internals/core';\n\nconst animationFrameTick = () =>\n  new Observable<number>((subscriber) => {\n    // use the unpatched API no avoid zone interference\n    const id = getZoneUnPatchedApi('requestAnimationFrame')(() => {\n      subscriber.next(0);\n      subscriber.complete();\n    });\n    return () => {\n      // use the unpatched API no avoid zone interference\n      getZoneUnPatchedApi('cancelAnimationFrame')(id);\n    };\n  });\n\nconst localCredentials: RxStrategyCredentials = {\n  name: 'local',\n  work: (cdRef, _, notification) => {\n    cdRef.detectChanges();\n  },\n  behavior:\n    ({ work, scope, ngZone }) =>\n    (o$) =>\n      o$.pipe(\n        coalesceWith(animationFrameTick(), scope as Record<string, unknown>),\n        tap(() => (ngZone ? ngZone.run(() => work()) : work()))\n      ),\n};\n\nconst noopCredentials: RxStrategyCredentials = {\n  name: 'noop',\n  work: () => void 0,\n  behavior: () => (o$) => o$,\n};\n\nconst nativeCredentials: RxStrategyCredentials = {\n  name: 'native',\n  work: (cdRef) => cdRef.markForCheck(),\n  behavior:\n    ({ work, ngZone }) =>\n    (o$) =>\n      o$.pipe(\n        tap(() =>\n          ngZone && !NgZone.isInAngularZone()\n            ? ngZone.run(() => work())\n            : work()\n        )\n      ),\n};\n\n/**\n * @deprecated\n * angular drops the internal markDirty API, will fall back to native if used\n */\nconst globalCredentials: RxStrategyCredentials = {\n  ...nativeCredentials,\n  name: 'global',\n};\n\nexport type RxNativeStrategies =\n  RxCustomStrategyCredentials<RxNativeStrategyNames>;\nexport const RX_NATIVE_STRATEGIES: RxNativeStrategies = {\n  global: globalCredentials,\n  native: nativeCredentials,\n  noop: noopCredentials,\n  local: localCredentials,\n};\n"]}