{"version":3,"file":"model.js","sourceRoot":"","sources":["../../../../../../libs/cdk/render-strategies/src/lib/model.ts"],"names":[],"mappings":"","sourcesContent":["import { ChangeDetectorRef, NgZone } from '@angular/core';\nimport { coalescingObj, RxCoalescingOptions } from '@rx-angular/cdk/coalescing';\nimport { RxNotification } from '@rx-angular/cdk/notifications';\nimport { Observable } from 'rxjs';\n\nexport interface ScheduleOnStrategyOptions {\n  scope?: {};\n  strategy?: string;\n  patchZone?: false | NgZone;\n}\n\nexport type RxRenderWork = <T = unknown>(\n  cdRef: ChangeDetectorRef,\n  scope?: coalescingObj,\n  notification?: RxNotification<T>\n) => void;\nexport type RxRenderBehavior = <T = unknown>(params: {\n  work: () => any;\n  scope?: coalescingObj;\n  ngZone?: NgZone;\n}) => (o: Observable<T>) => Observable<T>;\n\nexport interface RxStrategyCredentials<S = string> {\n  name: S;\n  work: RxRenderWork;\n  behavior: RxRenderBehavior;\n}\n\nexport type RxCustomStrategyCredentials<T extends string> = Record<\n  T,\n  RxStrategyCredentials\n>;\n/**\n * @deprecated\n * angular drops the internal markDirty API, will fall back to native if used\n */\nexport type RxGlobalStrategyName = 'global';\nexport type RxNativeStrategyNames =\n  | 'native'\n  | 'local'\n  | 'noop'\n  | RxGlobalStrategyName;\nexport type RxConcurrentStrategyNames =\n  | 'immediate'\n  | 'userBlocking'\n  | 'normal'\n  | 'low'\n  | 'idle';\nexport type RxDefaultStrategyNames =\n  | RxNativeStrategyNames\n  | RxConcurrentStrategyNames;\nexport type RxStrategyNames<T> = RxDefaultStrategyNames | T;\nexport type RxStrategies<T extends string> = RxCustomStrategyCredentials<\n  RxStrategyNames<T>\n>;\n"]}