{"version":3,"file":"onStrategy.js","sourceRoot":"","sources":["../../../../../../libs/cdk/render-strategies/src/lib/onStrategy.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,MAAM,MAAM,CAAC;AAC9C,OAAO,EAAE,UAAU,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,gBAAgB,CAAC;AAGvD;;;;;;;GAOG;AACH,MAAM,UAAU,UAAU,CACxB,KAAQ,EACR,QAA+B,EAC/B,WAIS,EACT,UAAqD,EAAE;IAEvD,OAAO,IAAI,UAAU,CAAI,CAAC,UAAU,EAAE,EAAE;QACtC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACzB,CAAC,CAAC,CAAC,IAAI,CACL,QAAQ,CAAC,QAAQ,CAAC;QAChB,IAAI,EAAE,GAAG,EAAE,CAAC,WAAW,CAAC,KAAK,EAAE,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC;QACtD,KAAK,EAAG,OAAO,CAAC,KAAiC,IAAI,EAAE;QACvD,MAAM,EAAE,OAAO,CAAC,MAAM;KACvB,CAAC,EACF,UAAU,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,EACvD,GAAG,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,EAChB,IAAI,CAAC,CAAC,CAAC,CACR,CAAC;AACJ,CAAC","sourcesContent":["import { NgZone } from '@angular/core';\nimport { RxCoalescingOptions } from '@rx-angular/cdk/coalescing';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map, take } from 'rxjs/operators';\nimport { RxRenderWork, RxStrategyCredentials } from './model';\n\n/**\n * @internal\n *\n * @param value\n * @param strategy\n * @param workFactory\n * @param options\n */\nexport function onStrategy<T>(\n  value: T,\n  strategy: RxStrategyCredentials,\n  workFactory: (\n    value: T,\n    work: RxRenderWork,\n    options: RxCoalescingOptions\n  ) => void,\n  options: RxCoalescingOptions & { ngZone?: NgZone } = {}\n): Observable<T> {\n  return new Observable<T>((subscriber) => {\n    subscriber.next(value);\n  }).pipe(\n    strategy.behavior({\n      work: () => workFactory(value, strategy.work, options),\n      scope: (options.scope as Record<string, unknown>) || {},\n      ngZone: options.ngZone,\n    }),\n    catchError((error) => throwError(() => [error, value])),\n    map(() => value),\n    take(1)\n  );\n}\n"]}