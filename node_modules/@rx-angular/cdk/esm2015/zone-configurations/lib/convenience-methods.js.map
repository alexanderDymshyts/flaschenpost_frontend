{"version":3,"file":"convenience-methods.js","sourceRoot":"","sources":["../../../../../../libs/cdk/zone-configurations/src/lib/convenience-methods.ts"],"names":[],"mappings":"AAIA,OAAO,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AAE1C,MAAM,CAAC,MAAM,kBAAkB,GAAG,CAChC,MAAiC,EACD,EAAE,CAAC,CAAC;IACpC,UAAU,EAAE,GAAG,EAAE;QACf,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;QAC5B,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC;IACzD,CAAC;IACD,+BAA+B,EAAE,GAAG,EAAE;QACpC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACjD,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACrD,CAAC;CACF,CAAC,CAAC","sourcesContent":["import {\n  RxZoneConfigConfiguration,\n  RxZoneConfigConvenienceMethods,\n} from './model/zone-config.types';\nimport { xhrEvents } from './event-names';\n\nexport const convenienceMethods = (\n  config: RxZoneConfigConfiguration\n): RxZoneConfigConvenienceMethods => ({\n  unpatchXHR: () => {\n    config.global.disable.XHR();\n    config.events.disable.UNPATCHED_EVENTS([...xhrEvents]);\n  },\n  useUnpatchedPassiveScrollEvents: () => {\n    config.events.disable.PASSIVE_EVENTS(['scroll']);\n    config.events.disable.UNPATCHED_EVENTS(['scroll']);\n  },\n});\n"]}