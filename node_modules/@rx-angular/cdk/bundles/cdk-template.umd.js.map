{"version":3,"file":"cdk-template.umd.js","sources":["../../../../libs/cdk/template/src/lib/utils.ts","../../../../libs/cdk/template/src/lib/model.ts","../../../../node_modules/tslib/tslib.es6.js","../../../../libs/cdk/template/src/lib/render-error.ts","../../../../libs/cdk/template/src/lib/template-manager.ts","../../../../libs/cdk/template/src/lib/list-view-handler.ts","../../../../libs/cdk/template/src/lib/list-template-manager.ts","../../../../libs/cdk/template/src/lib/list-view-context.ts","../../../../libs/cdk/template/src/cdk-template.ts"],"sourcesContent":["import {\n  ChangeDetectorRef,\n  EmbeddedViewRef,\n  NgZone,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport {\n  onStrategy,\n  RxStrategyCredentials,\n} from '@rx-angular/cdk/render-strategies';\nimport { concat, MonoTypeOperatorFunction, of } from 'rxjs';\nimport { ignoreElements, switchMap } from 'rxjs/operators';\n\n/**\n * @internal\n * creates an embeddedViewRef\n *\n * @param viewContainerRef\n * @param templateRef\n * @param context\n * @param index\n * @return EmbeddedViewRef<C>\n */\nexport function createEmbeddedView<C>(\n  viewContainerRef: ViewContainerRef,\n  templateRef: TemplateRef<C>,\n  context: C,\n  index = 0\n): EmbeddedViewRef<C> {\n  const view = viewContainerRef.createEmbeddedView(templateRef, context, index);\n  view.detectChanges();\n  return view;\n}\n\n/**\n * @internal\n *\n * A factory function returning an object to handle `TemplateRef`'s.\n * You can add and get a `TemplateRef`.\n *\n */\nexport function templateHandling<N, C>(\n  viewContainerRef: ViewContainerRef\n): {\n  add(name: N, templateRef: TemplateRef<C>): void;\n  get(name: N): TemplateRef<C>;\n  createEmbeddedView(name: N, context?: C, index?: number): EmbeddedViewRef<C>;\n} {\n  const templateCache = new Map<N, TemplateRef<C>>();\n\n  const get = (name: N): TemplateRef<C> => {\n    return templateCache.get(name);\n  };\n  return {\n    add(name: N, templateRef: TemplateRef<C>): void {\n      assertTemplate(name, templateRef);\n      if (!templateCache.has(name)) {\n        templateCache.set(name, templateRef);\n      } else {\n        throw new Error(\n          'Updating an already existing Template is not supported at the moment.'\n        );\n      }\n    },\n    get,\n    createEmbeddedView: (name: N, context?: C) =>\n      createEmbeddedView(viewContainerRef, get(name), context),\n  };\n\n  //\n  function assertTemplate<T>(\n    property: any,\n    templateRef: TemplateRef<T> | null\n  ): templateRef is TemplateRef<T> {\n    const isTemplateRefOrNull = !!(\n      !templateRef || templateRef.createEmbeddedView\n    );\n    if (!isTemplateRefOrNull) {\n      throw new Error(\n        `${property} must be a TemplateRef, but received something else.`\n      );\n    }\n    return isTemplateRefOrNull;\n  }\n}\n\n/**\n * @internal\n *\n * A side effect operator similar to `tap` but with a static internal logic.\n * It calls detect changes on the 'VirtualParent' and the injectingViewCdRef.\n *\n * @param injectingViewCdRef\n * @param strategy\n * @param notifyNeeded\n * @param ngZone\n */\nexport function notifyAllParentsIfNeeded<T>(\n  injectingViewCdRef: ChangeDetectorRef,\n  strategy: RxStrategyCredentials,\n  notifyNeeded: () => boolean,\n  ngZone?: NgZone\n): MonoTypeOperatorFunction<T> {\n  return (o$) =>\n    o$.pipe(\n      switchMap((v) => {\n        const notifyParent = notifyNeeded();\n        if (!notifyParent) {\n          return of(v);\n        }\n        return concat(\n          of(v),\n          onStrategy(\n            injectingViewCdRef,\n            strategy,\n            (_v, work, options) => {\n              /*console.log(\n               'notifyAllParentsIfNeeded injectingView',\n               (injectingViewCdRef as any).context\n               );*/\n              work(injectingViewCdRef, options.scope);\n            },\n            {\n              scope: (injectingViewCdRef as any).context || injectingViewCdRef,\n              ngZone,\n            }\n          ).pipe(ignoreElements())\n        );\n      })\n    );\n}\n","import {\n  ChangeDetectorRef,\n  EmbeddedViewRef,\n  ErrorHandler,\n  NgZone,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { RxNotification } from '@rx-angular/cdk/notifications';\nimport { RxStrategies } from '@rx-angular/cdk/render-strategies';\n\nexport type rxBaseTemplateNames = 'errorTpl' | 'completeTpl' | 'suspenseTpl';\n\nexport enum RxBaseTemplateNames {\n  error = 'errorTpl',\n  complete = 'completeTpl',\n  suspense = 'suspenseTpl',\n}\n\nexport const enum RxListTemplateChangeType {\n  insert,\n  remove,\n  move,\n  update,\n  context,\n}\n// [value, index, oldIndex?]\nexport type RxListTemplateChangePayload<T> = [T, number, number?];\nexport type RxListTemplateChange<T = any> = [\n  RxListTemplateChangeType,\n  RxListTemplateChangePayload<T>\n];\nexport type RxListTemplateChanges<T = any> = [\n  RxListTemplateChange<T>[], // changes to apply\n  boolean // notify parent\n];\n\nexport interface RxViewContext<T> {\n  // to enable `let` syntax we have to use $implicit (var; let v = var)\n  $implicit: T;\n  // set context var complete to true (var$; let e = $error)\n  error: boolean | Error;\n  // set context var complete to true (var$; let c = $complete)\n  complete: boolean;\n  // set context var suspense to true (var$; let s = $suspense)\n  suspense: boolean;\n}\n\nexport interface RxRenderAware<T> {\n  nextStrategy: (nextConfig: string | Observable<string>) => void;\n  render: (values$: Observable<RxNotification<T>>) => Observable<void>;\n}\n\nexport interface RxRenderSettings {\n  cdRef: ChangeDetectorRef;\n  parent: boolean;\n  patchZone: NgZone | false;\n  strategies: RxStrategies<string>;\n  defaultStrategyName: string;\n  errorHandler?: ErrorHandler;\n}\n\nexport type CreateEmbeddedView<C> = (\n  viewContainerRef: ViewContainerRef,\n  patchZone: NgZone | false\n) => (\n  templateRef: TemplateRef<C>,\n  context?: C,\n  index?: number\n) => EmbeddedViewRef<C>;\n\nexport type CreateViewContext<T, C, U = unknown> = (\n  value: T,\n  computedContext: U\n) => C;\n\nexport type UpdateViewContext<T, C, U = unknown> = (\n  value: T,\n  view: EmbeddedViewRef<C>,\n  computedContext?: U\n) => void;\n\nexport interface RxTemplateSettings<T, C> {\n  viewContainerRef: ViewContainerRef;\n  customContext?: (value: T) => Partial<C>;\n}\n\nexport interface RxListTemplateSettings<T, C, U = unknown> {\n  viewContainerRef: ViewContainerRef;\n  createViewContext: CreateViewContext<T, C, U>;\n  updateViewContext: UpdateViewContext<T, C, U>;\n  initialTemplateRef?: TemplateRef<C>;\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { ErrorHandler } from '@angular/core';\n\n/** @internal **/\nexport type RxRenderError<T> = [Error, T];\n\n/** @internal **/\nexport type RxRenderErrorFactory<T, E> = (\n  error: Error,\n  value: T\n) => RxRenderError<E>;\n\n/** @internal **/\nexport function isRxRenderError<T>(e: any): e is RxRenderError<T> {\n  return (\n    e != null && Array.isArray(e) && e.length === 2 && e[0] instanceof Error\n  );\n}\n\n/** @internal **/\nexport function createErrorHandler(\n  _handler?: ErrorHandler\n): ErrorHandler {\n  const _handleError = _handler\n    ? (e) => _handler.handleError(e)\n    : console.error;\n  return {\n    handleError: (error) => {\n      if (isRxRenderError(error)) {\n        _handleError(error[0]);\n        console.error('additionalErrorContext', error[1]);\n      } else {\n        _handleError(error);\n      }\n    },\n  };\n}\n\n/** @internal **/\nexport function toRenderError<T>(e: Error, context: T): RxRenderError<T> {\n  return [e, context];\n}\n","import { EmbeddedViewRef, TemplateRef } from '@angular/core';\nimport { RxCoalescingOptions } from '@rx-angular/cdk/coalescing';\nimport {\n  RxCompleteNotification,\n  RxErrorNotification,\n  RxNextNotification,\n  RxNotification,\n  RxNotificationKind,\n  RxSuspenseNotification,\n} from '@rx-angular/cdk/notifications';\nimport {\n  onStrategy,\n  RxRenderWork,\n  strategyHandling,\n} from '@rx-angular/cdk/render-strategies';\nimport { EMPTY, merge, Observable, of } from 'rxjs';\nimport {\n  catchError,\n  map,\n  switchMap,\n  tap,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport {\n  rxBaseTemplateNames,\n  RxRenderAware,\n  RxRenderSettings,\n  RxTemplateSettings,\n  RxViewContext,\n} from './model';\nimport { createErrorHandler } from './render-error';\nimport { notifyAllParentsIfNeeded, templateHandling } from './utils';\n\nexport interface RxTemplateManager<\n  T,\n  C extends RxViewContext<T>,\n  N = rxBaseTemplateNames | string\n> extends RxRenderAware<T> {\n  addTemplateRef: (name: N, templateRef: TemplateRef<C>) => void;\n}\n\n/**\n * @internal\n *\n * A factory function that returns a map of projections to turn a notification of a Observable (next, error, complete)\n *\n * @param customNextContext - projection function to provide custom properties as well as override existing\n */\nexport function notificationKindToViewContext<T>(\n  customNextContext: (value: T) => object\n): RxViewContextMap<T> {\n  // @TODO rethink overrides\n  return {\n    suspense: (notification: RxSuspenseNotification<T>) => {\n      const $implicit: T | null | undefined = notification.value as T;\n      return {\n        $implicit,\n        suspense: true,\n        error: false,\n        complete: false,\n        ...customNextContext($implicit),\n      };\n    },\n    next: (notification: RxNextNotification<T>) => {\n      const $implicit: T | null | undefined = notification.value as T;\n      return {\n        $implicit,\n        suspense: false,\n        error: false,\n        complete: false,\n        ...customNextContext($implicit),\n      };\n    },\n    error: (notification: RxErrorNotification<T>) => {\n      const $implicit: T | null | undefined = notification.value as T;\n      return {\n        $implicit,\n        complete: false,\n        error: notification.error || true,\n        suspense: false,\n        ...customNextContext($implicit),\n      };\n    },\n    complete: (notification: RxCompleteNotification<T>) => {\n      const $implicit: T | null | undefined = notification.value as T;\n      return {\n        $implicit,\n        error: false,\n        complete: true,\n        suspense: false,\n        ...customNextContext($implicit),\n      };\n    },\n  };\n}\nexport type RxViewContextMap<T> = Record<\n  RxNotificationKind,\n  (value?: any) => Partial<RxViewContext<T>>\n>;\n\nexport type RxNotificationTemplateNameMap<T, C, N> = Record<\n  RxNotificationKind,\n  (value?: T, templates?: { get: (name: N) => TemplateRef<C> }) => N\n>;\n\nexport function createTemplateManager<\n  T,\n  C extends RxViewContext<T>,\n  N extends string = string\n>(config: {\n  renderSettings: RxRenderSettings;\n  templateSettings: RxTemplateSettings<T, C>;\n  templateTrigger$?: Observable<RxNotificationKind>;\n  notificationToTemplateName: RxNotificationTemplateNameMap<T, C, N>;\n}): RxTemplateManager<T, C, N> {\n  const { renderSettings, notificationToTemplateName, templateSettings } =\n    config;\n  const {\n    defaultStrategyName,\n    strategies,\n    cdRef: injectingViewCdRef,\n    patchZone,\n    parent,\n  } = renderSettings;\n\n  const errorHandler = createErrorHandler(renderSettings.errorHandler);\n  const ngZone = patchZone ? patchZone : undefined;\n\n  let activeTemplate: N;\n\n  const strategyHandling$ = strategyHandling(defaultStrategyName, strategies);\n  const templates = templateHandling<N, C>(templateSettings.viewContainerRef);\n  const viewContainerRef = templateSettings.viewContainerRef;\n\n  const triggerHandling = config.templateTrigger$ || EMPTY;\n  const getContext = notificationKindToViewContext(\n    templateSettings.customContext || (() => ({}))\n  );\n\n  return {\n    addTemplateRef: (name: N, templateRef: TemplateRef<C>) => {\n      templates.add(name, templateRef);\n    },\n    nextStrategy: strategyHandling$.next,\n    render(values$: Observable<RxNotification<T>>): Observable<any> {\n      let trg: RxNotificationKind | undefined;\n      let notification: RxNotification<T> = {\n        value: undefined,\n        complete: false,\n        error: false,\n        kind: RxNotificationKind.Suspense,\n        hasValue: false,\n      };\n\n      return merge(\n        values$.pipe(tap((n) => (notification = n))),\n        triggerHandling.pipe(\n          tap<RxNotificationKind>((trigger) => (trg = trigger))\n        )\n      ).pipe(\n        map(() => {\n          const contextKind: RxNotificationKind = trg || notification.kind;\n          trg = undefined;\n          const value: T = notification.value as T;\n          const templateName = notificationToTemplateName[contextKind](\n            value,\n            templates\n          );\n          const template = templates.get(templateName);\n          return { template, templateName, notification, contextKind };\n        }),\n        withLatestFrom(strategyHandling$.strategy$),\n        // Cancel old renders\n        switchMap(\n          ([\n            { template, templateName, notification, contextKind },\n            strategy,\n          ]) => {\n            const isNewTemplate = activeTemplate !== templateName || !template;\n            const notifyParent = isNewTemplate && parent;\n            return onStrategy(\n              notification.value,\n              strategy,\n              (v: T, work: RxRenderWork, options: RxCoalescingOptions) => {\n                const context = <C>getContext[contextKind](notification);\n                if (isNewTemplate) {\n                  // template has changed (undefined => next; suspense => next; ...)\n                  // handle remove & insert\n                  // remove current view if there is any\n                  if (viewContainerRef.length > 0) {\n                    // patch removal if needed\n                    viewContainerRef.clear();\n                  }\n                  // create new view if any\n                  if (template) {\n                    // createEmbeddedView is already patched, no need for workFactory\n                    templates.createEmbeddedView(templateName, context);\n                  }\n                } else if (template) {\n                  // template didn't change, update it\n                  // handle update\n                  const view = <EmbeddedViewRef<C>>viewContainerRef.get(0);\n                  Object.keys(context).forEach((k) => {\n                    view.context[k] = context[k];\n                  });\n                  // update view context, patch if needed\n                  work(view, options.scope, notification);\n                }\n                activeTemplate = templateName;\n              },\n              { ngZone }\n              // we don't need to specify any scope here. The template manager is the only one\n              // who will call `viewRef#detectChanges` on any of the templates it manages.\n              // whenever a new value comes in, any pre-scheduled work of this taskManager will\n              // be nooped before a new work will be scheduled. This happens because of the implementation\n              // of `StrategyCredential#behavior`\n            ).pipe(\n              notifyAllParentsIfNeeded(\n                injectingViewCdRef,\n                strategy,\n                () => notifyParent,\n                ngZone\n              ),\n              catchError((e) => {\n                errorHandler.handleError(e);\n                return of(e);\n              })\n            );\n          }\n        )\n      );\n    },\n  };\n}\n","import {\n  RxListTemplateChange,\n  RxListTemplateChanges,\n  RxListTemplateChangeType,\n  RxListTemplateSettings,\n} from './model';\nimport { EmbeddedViewRef, IterableChanges } from '@angular/core';\nimport { RxListViewContext } from './list-view-context';\nimport { createEmbeddedView } from './utils';\n\n/**\n * @internal\n *\n * Factory that returns a `ListTemplateManager` for the passed params.\n *\n * @param templateSettings\n */\nexport function getTemplateHandler<C extends RxListViewContext<T>, T>(\n  templateSettings: Omit<RxListTemplateSettings<T, C>, 'patchZone'>\n): ListTemplateManager<T> {\n  const {\n    viewContainerRef,\n    initialTemplateRef,\n    createViewContext,\n    updateViewContext,\n  } = templateSettings;\n\n  return {\n    updateUnchangedContext,\n    insertView,\n    moveView,\n    removeView,\n    getListChanges,\n    updateView,\n  };\n\n  // =====\n\n  function updateUnchangedContext(item: T, index: number, count: number) {\n    const view = <EmbeddedViewRef<C>>viewContainerRef.get(index);\n    updateViewContext(item, view, {\n      count,\n      index,\n    });\n    view.detectChanges();\n  }\n\n  function moveView(\n    oldIndex: number,\n    item: T,\n    index: number,\n    count: number\n  ): void {\n    const oldView = viewContainerRef.get(oldIndex);\n    const view = <EmbeddedViewRef<C>>viewContainerRef.move(oldView, index);\n    updateViewContext(item, view, {\n      count,\n      index,\n    });\n    view.detectChanges();\n  }\n\n  function updateView(item: T, index: number, count: number): void {\n    const view = <EmbeddedViewRef<C>>viewContainerRef.get(index);\n    updateViewContext(item, view, {\n      count,\n      index,\n    });\n    view.detectChanges();\n  }\n\n  function removeView(index: number): void {\n    return viewContainerRef.remove(index);\n  }\n\n  function insertView(item: T, index: number, count: number): void {\n    createEmbeddedView(\n      viewContainerRef,\n      initialTemplateRef,\n      createViewContext(item, {\n        count,\n        index,\n      }),\n      index\n    );\n  }\n}\n\n/**\n * @internal\n *\n * An object that holds methods needed to introduce actions to a list e.g. move, remove, insert\n */\nexport interface ListTemplateManager<T> {\n  updateUnchangedContext(item: T, index: number, count: number): void;\n\n  insertView(item: T, index: number, count: number): void;\n\n  moveView(oldIndex: number, item: T, index: number, count: number): void;\n\n  updateView(item: T, index: number, count: number): void;\n\n  removeView(index: number): void;\n\n  getListChanges(\n    changes: IterableChanges<T>,\n    items: T[]\n  ): RxListTemplateChanges;\n}\n\n/**\n * @internal\n *\n * @param changes\n * @param items\n */\nfunction getListChanges<T>(\n  changes: IterableChanges<T>,\n  items: T[]\n): RxListTemplateChanges {\n  const changedIdxs = new Set<T>();\n  const changesArr: RxListTemplateChange[] = [];\n  let notifyParent = false;\n  changes.forEachOperation((record, adjustedPreviousIndex, currentIndex) => {\n    const item = record.item;\n    if (record.previousIndex == null) {\n      // insert\n      changesArr.push(\n        getInsertChange(item, currentIndex === null ? undefined : currentIndex)\n      );\n      changedIdxs.add(item);\n      notifyParent = true;\n    } else if (currentIndex == null) {\n      // remove\n      changesArr.push(\n        getRemoveChange(\n          item,\n          adjustedPreviousIndex === null ? undefined : adjustedPreviousIndex\n        )\n      );\n      notifyParent = true;\n    } else if (adjustedPreviousIndex !== null) {\n      // move\n      changesArr.push(getMoveChange(item, currentIndex, adjustedPreviousIndex));\n      changedIdxs.add(item);\n      notifyParent = true;\n    }\n  });\n  changes.forEachIdentityChange((record) => {\n    const item = record.item;\n    if (!changedIdxs.has(item)) {\n      changesArr.push(getUpdateChange(item, record.currentIndex));\n      changedIdxs.add(item);\n    }\n  });\n  items.forEach((item, index) => {\n    if (!changedIdxs.has(item)) {\n      changesArr.push(getUnchangedChange(item, index));\n    }\n  });\n  return [changesArr, notifyParent];\n\n  // ==========\n\n  function getMoveChange(\n    item: T,\n    currentIndex: number,\n    adjustedPreviousIndex: number\n  ): RxListTemplateChange {\n    return [\n      RxListTemplateChangeType.move,\n      [item, currentIndex, adjustedPreviousIndex],\n    ];\n  }\n\n  function getUpdateChange(\n    item: T,\n    currentIndex: number\n  ): RxListTemplateChange {\n    return [RxListTemplateChangeType.update, [item, currentIndex]];\n  }\n\n  function getUnchangedChange(item: T, index: number): RxListTemplateChange {\n    return [RxListTemplateChangeType.context, [item, index]];\n  }\n\n  function getInsertChange(\n    item: T,\n    currentIndex: number\n  ): RxListTemplateChange {\n    return [\n      RxListTemplateChangeType.insert,\n      [item, currentIndex === null ? undefined : currentIndex],\n    ];\n  }\n\n  function getRemoveChange(\n    item: T,\n    adjustedPreviousIndex: number\n  ): RxListTemplateChange {\n    return [\n      RxListTemplateChangeType.remove,\n      [\n        item,\n        adjustedPreviousIndex === null ? undefined : adjustedPreviousIndex,\n      ],\n    ];\n  }\n}\n","import {\n  EmbeddedViewRef,\n  IterableChanges,\n  IterableDiffer,\n  IterableDiffers,\n  NgIterable,\n  TemplateRef,\n  TrackByFunction,\n} from '@angular/core';\nimport { combineLatest, MonoTypeOperatorFunction, Observable, of } from 'rxjs';\nimport {\n  catchError,\n  distinctUntilChanged,\n  map,\n  switchMap,\n  tap,\n} from 'rxjs/operators';\nimport {\n  RxStrategyCredentials,\n  onStrategy,\n  strategyHandling,\n} from '@rx-angular/cdk/render-strategies';\nimport {\n  RxListViewComputedContext,\n  RxListViewContext,\n} from './list-view-context';\nimport { getTemplateHandler } from './list-view-handler';\nimport {\n  RxListTemplateChange,\n  RxListTemplateChangeType,\n  RxListTemplateSettings,\n  RxRenderSettings,\n} from './model';\nimport { createErrorHandler } from './render-error';\nimport { notifyAllParentsIfNeeded } from './utils';\n\nexport interface RxListManager<T> {\n  nextStrategy: (config: string | Observable<string>) => void;\n\n  render(changes$: Observable<NgIterable<T>>): Observable<NgIterable<T> | null>;\n}\n\nexport function createListTemplateManager<\n  T,\n  C extends RxListViewContext<T>\n>(config: {\n  renderSettings: RxRenderSettings;\n  templateSettings: RxListTemplateSettings<T, C, RxListViewComputedContext> & {\n    templateRef: TemplateRef<C>;\n  };\n  trackBy: TrackByFunction<T>;\n  iterableDiffers: IterableDiffers;\n}): RxListManager<T> {\n  const { templateSettings, renderSettings, trackBy, iterableDiffers } = config;\n  const {\n    defaultStrategyName,\n    strategies,\n    cdRef: injectingViewCdRef,\n    patchZone,\n    parent,\n  } = renderSettings;\n  const errorHandler = createErrorHandler(renderSettings.errorHandler);\n  const ngZone = patchZone ? patchZone : undefined;\n  const strategyHandling$ = strategyHandling(defaultStrategyName, strategies);\n\n  let _differ: IterableDiffer<T> | undefined;\n  function getDiffer(values: NgIterable<T>): IterableDiffer<T> | null {\n    if (_differ) {\n      return _differ;\n    }\n    return values\n      ? (_differ = iterableDiffers.find(values).create(trackBy))\n      : null;\n  }\n  //               type,  context\n  /* TODO (regarding createView): this is currently not in use. for the list-manager this would mean to provide\n   functions for not only create. developers than should have to provide create, move, remove,... the whole thing.\n   i don't know if this is the right decision for a first RC */\n  const listViewHandler = getTemplateHandler({\n    ...templateSettings,\n    initialTemplateRef: templateSettings.templateRef,\n  });\n  const viewContainerRef = templateSettings.viewContainerRef;\n\n  let notifyParent = false;\n  let changesArr: RxListTemplateChange[];\n  let partiallyFinished = false;\n\n  return {\n    nextStrategy(nextConfig: Observable<string>): void {\n      strategyHandling$.next(nextConfig);\n    },\n    render(\n      values$: Observable<NgIterable<T>>\n    ): Observable<NgIterable<T> | null> {\n      return values$.pipe(render());\n    },\n  };\n\n  function handleError() {\n    return (o$) =>\n      o$.pipe(\n        catchError((err: Error) => {\n          partiallyFinished = false;\n          errorHandler.handleError(err);\n          return of(null);\n        })\n      );\n  }\n\n  function render(): MonoTypeOperatorFunction<NgIterable<T> | null> {\n    return (o$: Observable<NgIterable<T>>): Observable<NgIterable<T> | null> =>\n      combineLatest([\n        o$,\n        strategyHandling$.strategy$.pipe(distinctUntilChanged()),\n      ]).pipe(\n        map(([iterable, strategy]) => {\n          const differ = getDiffer(iterable);\n          let changes: IterableChanges<T>;\n          if (differ) {\n            if (partiallyFinished) {\n              const currentIterable = [];\n              for (let i = 0, ilen = viewContainerRef.length; i < ilen; i++) {\n                const viewRef = <EmbeddedViewRef<C>>viewContainerRef.get(i);\n                currentIterable[i] = viewRef.context.$implicit;\n              }\n              differ.diff(currentIterable);\n            }\n            changes = differ.diff(iterable);\n          }\n          return {\n            changes,\n            iterable,\n            strategy,\n          };\n        }),\n        // Cancel old renders\n        switchMap(({ changes, iterable, strategy }) => {\n          if (!changes) {\n            return of([]);\n          }\n          const values = iterable || [];\n          // TODO: we might want to treat other iterables in a more performant way than Array.from()\n          const items = Array.isArray(values) ? values : Array.from(iterable);\n          const listChanges = listViewHandler.getListChanges(changes, items);\n          changesArr = listChanges[0];\n          const insertedOrRemoved = listChanges[1];\n          const applyChanges$ = getObservablesFromChangesArray(\n            changesArr,\n            strategy,\n            items.length\n          );\n          partiallyFinished = true;\n          notifyParent = insertedOrRemoved && parent;\n          return combineLatest(\n            applyChanges$.length > 0 ? applyChanges$ : [of(null)]\n          ).pipe(\n            tap(() => (partiallyFinished = false)),\n            notifyAllParentsIfNeeded(\n              injectingViewCdRef,\n              strategy,\n              () => notifyParent,\n              ngZone\n            ),\n            handleError(),\n            map(() => iterable)\n          );\n        }),\n        handleError()\n      );\n  }\n\n  /**\n   * @internal\n   *\n   * returns an array of streams which process all of the view updates needed to reflect the latest diff to the\n   * viewContainer.\n   * I\n   *\n   * @param changes\n   * @param strategy\n   * @param count\n   */\n  function getObservablesFromChangesArray(\n    changes: RxListTemplateChange<T>[],\n    strategy: RxStrategyCredentials,\n    count: number\n  ): Observable<RxListTemplateChangeType>[] {\n    return changes.length > 0\n      ? changes.map((change) => {\n          const payload = change[1];\n          return onStrategy(\n            change[0],\n            strategy,\n            (type) => {\n              switch (type) {\n                case RxListTemplateChangeType.insert:\n                  listViewHandler.insertView(payload[0], payload[1], count);\n                  break;\n                case RxListTemplateChangeType.move:\n                  listViewHandler.moveView(\n                    payload[2],\n                    payload[0],\n                    payload[1],\n                    count\n                  );\n                  break;\n                case RxListTemplateChangeType.remove:\n                  listViewHandler.removeView(payload[1]);\n                  break;\n                case RxListTemplateChangeType.update:\n                  listViewHandler.updateView(payload[0], payload[1], count);\n                  break;\n                case RxListTemplateChangeType.context:\n                  listViewHandler.updateUnchangedContext(\n                    payload[0],\n                    payload[1],\n                    count\n                  );\n                  break;\n              }\n            },\n            { ngZone }\n          );\n        })\n      : [of(null)];\n  }\n}\n","import { NgIterable } from '@angular/core';\nimport { BehaviorSubject, Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map, pluck } from 'rxjs/operators';\n\nexport interface RxListViewComputedContext {\n  index: number;\n  count: number;\n}\n\nexport interface RxListViewContext<T, U = RxListViewComputedContext>\n  extends RxListViewComputedContext {\n  $implicit: T;\n  item$: Observable<T>;\n  updateContext(newProps: Partial<U>): void;\n}\n\nconst computeFirst = ({ count, index }) => index === 0;\nconst computeLast = ({ count, index }) => index === count - 1;\nconst computeEven = ({ count, index }) => index % 2 === 0;\n\nexport class RxDefaultListViewContext<\n  T,\n  U extends NgIterable<T> = NgIterable<T>,\n  K = keyof T\n> implements RxListViewContext<T>\n{\n  readonly _item = new ReplaySubject<T>(1);\n  item$ = this._item.asObservable();\n  private _$implicit: T;\n  private _$complete: boolean;\n  private _$error: false | Error;\n  private _$suspense: any;\n  private readonly _context$ = new BehaviorSubject<RxListViewComputedContext>({\n    index: -1,\n    count: -1,\n  });\n\n  set $implicit($implicit: T) {\n    this._$implicit = $implicit;\n    this._item.next($implicit);\n  }\n\n  get $implicit(): T {\n    return this._$implicit;\n  }\n\n  get $complete(): boolean {\n    return this._$complete;\n  }\n\n  get $error(): false | Error {\n    return this._$error;\n  }\n\n  get $suspense(): any {\n    return this._$suspense;\n  }\n\n  get index(): number {\n    return this._context$.getValue().index;\n  }\n\n  get count(): number {\n    return this._context$.getValue().count;\n  }\n\n  get first(): boolean {\n    return computeFirst(this._context$.getValue());\n  }\n\n  get last(): boolean {\n    return computeLast(this._context$.getValue());\n  }\n\n  get even(): boolean {\n    return computeEven(this._context$.getValue());\n  }\n\n  get odd(): boolean {\n    return !this.even;\n  }\n\n  get index$(): Observable<number> {\n    return this._context$.pipe(pluck('index'), distinctUntilChanged());\n  }\n\n  get count$(): Observable<number> {\n    return this._context$.pipe(pluck('count'), distinctUntilChanged());\n  }\n\n  get first$(): Observable<boolean> {\n    return this._context$.pipe(map(computeFirst), distinctUntilChanged());\n  }\n\n  get last$(): Observable<boolean> {\n    return this._context$.pipe(map(computeLast), distinctUntilChanged());\n  }\n\n  get even$(): Observable<boolean> {\n    return this._context$.pipe(map(computeEven), distinctUntilChanged());\n  }\n\n  get odd$(): Observable<boolean> {\n    return this.even$.pipe(map((even) => !even));\n  }\n\n  constructor(item: T, customProps?: { count: number; index: number }) {\n    this.$implicit = item;\n    if (customProps) {\n      this.updateContext(customProps);\n    }\n  }\n\n  updateContext(newProps: Partial<RxListViewComputedContext>): void {\n    this._context$.next({\n      ...this._context$.getValue(),\n      ...newProps,\n    });\n  }\n\n  select = (props: K[]): Observable<any> => {\n    return this.item$.pipe(pluck(...(props as any)));\n  };\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["switchMap","of","concat","onStrategy","ignoreElements","RxBaseTemplateNames","strategyHandling","EMPTY","merge","tap","map","withLatestFrom","catchError","combineLatest","distinctUntilChanged","ReplaySubject","BehaviorSubject","pluck"],"mappings":"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"}