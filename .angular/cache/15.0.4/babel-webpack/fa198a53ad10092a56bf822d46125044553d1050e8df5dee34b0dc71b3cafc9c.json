{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable } from '@angular/core';\nimport { createAccumulationObservable, createSideEffectObservable, safePluck, isKeyOf, select, isDefined, isObjectGuard } from '@rx-angular/state/selections';\nexport * from '@rx-angular/state/selections';\nimport { Subscription, isObservable, EMPTY } from 'rxjs';\nimport { map, catchError, tap } from 'rxjs/operators';\n\n/**\n * @description\n * RxState is a light-weight reactive state management service for managing local state in angular.\n *\n * @example\n * Component({\n *   selector: 'app-stateful',\n *   template: `<div>{{ state$ | async | json }}</div>`,\n *   providers: [RxState]\n * })\n * export class StatefulComponent {\n *   readonly state$ = this.state.select();\n *\n *   constructor(private state: RxState<{ foo: string }>) {}\n * }\n *\n * @docsCategory RxState\n * @docsPage RxState\n */\nclass RxState {\n  /**\n   * @internal\n   */\n  constructor() {\n    this.subscription = new Subscription();\n    this.accumulator = createAccumulationObservable();\n    this.effectObservable = createSideEffectObservable();\n    /**\n     * @description\n     * The unmodified state exposed as `Observable<T>`. It is not shared, distinct or gets replayed.\n     * Use the `$` property if you want to read the state without having applied {@link stateful} to it.\n     */\n    this.$ = this.accumulator.signal$;\n    this.subscription.add(this.subscribe());\n  }\n  /**\n   * @internal\n   */\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n  /**\n   * @description\n   *\n   * Allows to customize state accumulation function.\n   * This can be helpful to implement deep updates and tackle other immutability problems in a custom way.\n   * @example\n   *\n   * ```typescript\n   * const myAccumulator = (state: MyState, slice: Partial<MyState>) => deepCopy(state, slice);\n   *\n   * this.state.setAccumulator(myAccumulator);\n   * ```\n   */\n  setAccumulator(accumulatorFn) {\n    this.accumulator.nextAccumulator(accumulatorFn);\n  }\n  /** @internal **/\n  get(...keys) {\n    const hasStateAnyKeys = Object.keys(this.accumulator.state).length > 0;\n    if (!!keys && keys.length) {\n      return safePluck(this.accumulator.state, keys);\n    } else {\n      return hasStateAnyKeys ? this.accumulator.state : undefined;\n    }\n  }\n  /**\n   * @internal\n   */\n  set(keyOrStateOrProjectState, stateOrSliceProjectFn) {\n    if (typeof keyOrStateOrProjectState === 'object' && stateOrSliceProjectFn === undefined) {\n      this.accumulator.nextSlice(keyOrStateOrProjectState);\n      return;\n    }\n    if (typeof keyOrStateOrProjectState === 'function' && stateOrSliceProjectFn === undefined) {\n      this.accumulator.nextSlice(keyOrStateOrProjectState(this.accumulator.state));\n      return;\n    }\n    if (isKeyOf(keyOrStateOrProjectState) && typeof stateOrSliceProjectFn === 'function') {\n      const state = {};\n      state[keyOrStateOrProjectState] = stateOrSliceProjectFn(this.accumulator.state);\n      this.accumulator.nextSlice(state);\n      return;\n    }\n    throw new Error('wrong params passed to set');\n  }\n  /**\n   * @internal\n   */\n  connect(keyOrInputOrSlice$, projectOrSlices$, projectValueFn) {\n    if (projectValueFn === undefined && projectOrSlices$ === undefined && isObservable(keyOrInputOrSlice$)) {\n      this.accumulator.nextSliceObservable(keyOrInputOrSlice$);\n      return;\n    }\n    if (projectValueFn === undefined && typeof projectOrSlices$ === 'function' && isObservable(keyOrInputOrSlice$) && !isObservable(projectOrSlices$)) {\n      const project = projectOrSlices$;\n      const slice$ = keyOrInputOrSlice$.pipe(map(v => project(this.get(), v)));\n      this.accumulator.nextSliceObservable(slice$);\n      return;\n    }\n    if (projectValueFn === undefined && isKeyOf(keyOrInputOrSlice$) && isObservable(projectOrSlices$)) {\n      const key = keyOrInputOrSlice$;\n      const slice$ = projectOrSlices$.pipe(map(value => Object.assign({}, {\n        [key]: value\n      })));\n      this.accumulator.nextSliceObservable(slice$);\n      return;\n    }\n    if (typeof projectValueFn === 'function' && isKeyOf(keyOrInputOrSlice$) && isObservable(projectOrSlices$)) {\n      const key = keyOrInputOrSlice$;\n      const slice$ = projectOrSlices$.pipe(map(value => Object.assign({}, {\n        [key]: projectValueFn(this.get(), value)\n      })));\n      this.accumulator.nextSliceObservable(slice$);\n      return;\n    }\n    throw new Error('wrong params passed to connect');\n  }\n  /**\n   * @internal\n   */\n  select(...args) {\n    return this.accumulator.state$.pipe(select(...args));\n  }\n  /**\n   * @description\n   * Manages side-effects of your state. Provide an `Observable<any>` **side-effect** and an optional\n   * `sideEffectFunction`.\n   * Subscription handling is done automatically.\n   *\n   * @example\n   * // Directly pass an observable side-effect\n   * const localStorageEffect$ = changes$.pipe(\n   *  tap(changes => storeChanges(changes))\n   * );\n   * state.hold(localStorageEffect$);\n   *\n   * // Pass an additional `sideEffectFunction`\n   *\n   * const localStorageEffectFn = changes => storeChanges(changes);\n   * state.hold(changes$, localStorageEffectFn);\n   *\n   * @param {Observable<S>} obsOrObsWithSideEffect\n   * @param {function} [sideEffectFn]\n   */\n  hold(obsOrObsWithSideEffect, sideEffectFn) {\n    const sideEffect = obsOrObsWithSideEffect.pipe(catchError(e => EMPTY));\n    if (typeof sideEffectFn === 'function') {\n      this.effectObservable.nextEffectObservable(sideEffect.pipe(tap(sideEffectFn)));\n      return;\n    }\n    this.effectObservable.nextEffectObservable(sideEffect);\n  }\n  /**\n   * @internal\n   */\n  subscribe() {\n    const subscription = new Subscription();\n    subscription.add(this.accumulator.subscribe());\n    subscription.add(this.effectObservable.subscribe());\n    return subscription;\n  }\n}\n/** @nocollapse */\nRxState.ɵfac = function RxState_Factory(t) {\n  return new (t || RxState)();\n};\n/** @nocollapse */\nRxState.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: RxState,\n  factory: RxState.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RxState, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n\n// eslint-disable-next-line @nrwl/nx/enforce-module-boundaries\n/**\n * @deprecated moved to `@rx-angular/cdk/transformations`\n * @see {@link https://www.npmjs.com/package/@rx-angular/cdk}\n */\nfunction insert(source, updates) {\n  const updatesDefined = isDefined(updates);\n  const sourceIsNotArray = !Array.isArray(source);\n  const invalidInput = sourceIsNotArray && !updatesDefined;\n  if (sourceIsNotArray && isDefined(source)) {\n    console.warn(`Insert: Original value (${source}) is not an array.`);\n  }\n  if (invalidInput) {\n    return source;\n  }\n  return (sourceIsNotArray ? [] : source).concat(updatesDefined ? Array.isArray(updates) ? updates : [updates] : []);\n}\n\n// eslint-disable-next-line @nrwl/nx/enforce-module-boundaries\nconst defaultCompareFn = (a, b) => a === b;\n/**\n * @deprecated moved to `@rx-angular/cdk/transformations`\n * @see {@link https://www.npmjs.com/package/@rx-angular/cdk}\n */\nfunction valuesComparer(original, incoming, compare) {\n  if (isKeyOf(compare)) {\n    return original[compare] === incoming[compare];\n  }\n  if (Array.isArray(compare)) {\n    const sanitizedKeys = compare.filter(k => isKeyOf(k));\n    return sanitizedKeys.length > 0 ? sanitizedKeys.every(k => original[k] === incoming[k]) : defaultCompareFn(original, incoming);\n  }\n  return (compare || defaultCompareFn)(original, incoming);\n}\n\n// eslint-disable-next-line @nrwl/nx/enforce-module-boundaries\n/**\n * @deprecated moved to `@rx-angular/cdk/transformations`\n * @see {@link https://www.npmjs.com/package/@rx-angular/cdk}\n */\nfunction remove(source, scrap, compare) {\n  const scrapAsArray = isDefined(scrap) ? Array.isArray(scrap) ? scrap : [scrap] : [];\n  const invalidInput = !Array.isArray(source);\n  if (invalidInput) {\n    console.warn(`Remove: original value (${source}) is not an array`);\n    return source;\n  }\n  return source.filter(existingItem => {\n    return !scrapAsArray.some(item => valuesComparer(item, existingItem, compare));\n  });\n}\n\n// eslint-disable-next-line @nrwl/nx/enforce-module-boundaries\n/**\n * @deprecated moved to `@rx-angular/cdk/transformations`\n * @see {@link https://www.npmjs.com/package/@rx-angular/cdk}\n */\nfunction toDictionary(source, key) {\n  if (!isDefined(source)) {\n    return source;\n  }\n  const sourceEmpty = !source.length;\n  if (!Array.isArray(source) || sourceEmpty || !isKeyOf(source[0][key])) {\n    if (!sourceEmpty) {\n      console.warn('ToDictionary: unexpected input params.');\n    }\n    return {};\n  }\n  const dictionary = {};\n  const length = source.length;\n  let i = 0;\n  for (i; i < length; i++) {\n    dictionary[`${source[i][key]}`] = Object.assign({}, source[i]);\n  }\n  return dictionary;\n}\n\n/**\n * @deprecated moved to `@rx-angular/cdk/transformations`\n * @see {@link https://www.npmjs.com/package/@rx-angular/cdk}\n */\nfunction update(source, updates, compare) {\n  const updatesDefined = updates != null;\n  const updatesAsArray = updatesDefined ? Array.isArray(updates) ? updates : [updates] : [];\n  const sourceDefined = source != null;\n  const sourceIsNotArray = !Array.isArray(source);\n  const invalidInput = sourceIsNotArray || source.length === 0 || updatesAsArray.length === 0;\n  if (sourceDefined && sourceIsNotArray) {\n    console.warn(`Update: Original value (${source}) is not an array.`);\n  }\n  if (invalidInput) {\n    return source;\n  }\n  const x = [];\n  for (const existingItem of source) {\n    const match = customFind(updatesAsArray, item => valuesComparer(item, existingItem, compare));\n    x.push(match ? Object.assign(Object.assign({}, existingItem), match) : existingItem);\n  }\n  return x;\n}\nfunction customFind(array, fn) {\n  for (const item of array) {\n    const x = fn(item);\n    if (x) {\n      return item;\n    }\n  }\n}\n\n// eslint-disable-next-line @nrwl/nx/enforce-module-boundaries\n/**\n * @deprecated moved to `@rx-angular/cdk/transformations`\n * @see {@link https://www.npmjs.com/package/@rx-angular/cdk}\n */\nfunction extract(array, keys) {\n  const arrayIsArray = isDefined(array) && Array.isArray(array);\n  if (!arrayIsArray) {\n    console.warn(`extract: original value (${array}) is not an array.`);\n    return undefined;\n  }\n  const sanitizedKeys = (Array.isArray(keys) ? keys : [keys]).filter(k => isKeyOf(k) && array.some(i => k in i));\n  const length = sanitizedKeys.length;\n  if (!sanitizedKeys.length) {\n    console.warn(`extract: provided keys not found`);\n    return undefined;\n  }\n  return array.map(item => {\n    let i = 0;\n    const result = {};\n    for (i; i < length; i++) {\n      result[sanitizedKeys[i]] = item[sanitizedKeys[i]];\n    }\n    return result;\n  });\n}\n\n// eslint-disable-next-line @nrwl/nx/enforce-module-boundaries\n/**\n * @deprecated moved to `@rx-angular/cdk/transformations`\n * @see {@link https://www.npmjs.com/package/@rx-angular/cdk}\n */\nfunction upsert(source, update, compare) {\n  // check inputs for validity\n  const updatesAsArray = update != null ? Array.isArray(update) ? update : [update] : [];\n  // check inputs for validity\n  const sourceIsNotArray = !Array.isArray(source);\n  const invalidInput = sourceIsNotArray && updatesAsArray.length === 0;\n  // if the source value is not an Array or the input is not defined return the original source\n  // this is the case for any edge case:\n  // '', null, undefined, CustomObjectOfDoomAndDarkness, ...\n  if (invalidInput) {\n    return source;\n  }\n  // if source is empty array or not an array, but the updates are valid:\n  // return a shallow copy of the updates as result\n  if (updatesAsArray.length > 0 && (sourceIsNotArray || source.length === 0)) {\n    return [...updatesAsArray];\n  }\n  const inserts = [];\n  const updates = {};\n  // process updates/inserts\n  for (const item of updatesAsArray) {\n    const match = source.findIndex(sourceItem => valuesComparer(item, sourceItem, compare));\n    // if item already exists, save it as update\n    if (match !== -1) {\n      updates[match] = item;\n    } else {\n      // otherwise consider this as insert\n      if (isObjectGuard(item)) {\n        // create a shallow copy if item is an object\n        inserts.push(Object.assign({}, item));\n      } else {\n        // otherwise just push it\n        inserts.push(item);\n      }\n    }\n  }\n  const updated = source.map((item, i) => {\n    const updatedItem = updates[i];\n    // process the updated\n    if (updatedItem !== null && updatedItem !== undefined) {\n      if (isObjectGuard(item)) {\n        return Object.assign(Object.assign({}, item), updatedItem);\n      } else {\n        return updatedItem;\n      }\n    }\n    return item;\n  });\n  // return the combination of the updated source & the inserts as new array\n  return updated.concat(inserts);\n}\n\n// eslint-disable-next-line @nrwl/nx/enforce-module-boundaries\n/**\n * @deprecated moved to `@rx-angular/cdk/transformations`\n * @see {@link https://www.npmjs.com/package/@rx-angular/cdk}\n */\nfunction deleteProp(object, key) {\n  if (!isDefined(object) || !isObjectGuard(object)) {\n    console.warn(`DeleteProp: original value ${object} is not an object.`);\n    return object;\n  }\n  if (!isKeyOf(key)) {\n    console.warn(`DeleteProp: provided key is not a string, number or symbol.`);\n    return Object.assign({}, object);\n  }\n  const copy = Object.assign({}, object);\n  delete copy[key];\n  return copy;\n}\n\n// eslint-disable-next-line @nrwl/nx/enforce-module-boundaries\n/**\n * @deprecated moved to `@rx-angular/cdk/transformations`\n * @see {@link https://www.npmjs.com/package/@rx-angular/cdk}\n */\nfunction dictionaryToArray(dictionary) {\n  if (!isDefined(dictionary)) {\n    return dictionary;\n  }\n  if (!isObjectGuard(dictionary)) {\n    console.warn(`DictionaryToArray: unexpected input.`);\n    return [];\n  }\n  return Object.values(dictionary);\n}\n\n// eslint-disable-next-line @nrwl/nx/enforce-module-boundaries\n/**\n * @deprecated moved to `@rx-angular/cdk/transformations`\n * @see {@link https://www.npmjs.com/package/@rx-angular/cdk}\n */\nfunction patch(object, upd) {\n  const update = isObjectGuard(upd) ? upd : {};\n  if (!isObjectGuard(object) && isObjectGuard(upd)) {\n    console.warn(`Patch: original value ${object} is not an object.`);\n    return Object.assign({}, update);\n  }\n  if (!isObjectGuard(object) && !isObjectGuard(upd)) {\n    console.warn(`Patch: original value ${object} and updates ${upd} are not objects.`);\n    return object;\n  }\n  return Object.assign(Object.assign({}, object), update);\n}\n\n// eslint-disable-next-line @nrwl/nx/enforce-module-boundaries\n/**\n * @deprecated moved to `@rx-angular/cdk/transformations`\n * @see {@link https://www.npmjs.com/package/@rx-angular/cdk}\n */\nfunction setProp(object, key, value) {\n  const objectIsObject = isObjectGuard(object);\n  const keyIsValid = isKeyOf(key);\n  const initialObject = objectIsObject ? object : {};\n  if (!objectIsObject) {\n    console.warn(`SetProp: original value (${object}) is not an object.`);\n  }\n  if (!keyIsValid) {\n    console.warn(`SetProp: key argument (${key}) is invalid.`);\n  }\n  if (!isDefined(object) && !keyIsValid) {\n    return object;\n  }\n  if (keyIsValid) {\n    return Object.assign(Object.assign({}, initialObject), {\n      [key]: value\n    });\n  }\n  return Object.assign({}, initialObject);\n}\n\n// eslint-disable-next-line @nrwl/nx/enforce-module-boundaries\n/**\n * @deprecated moved to `@rx-angular/cdk/transformations`\n * @see {@link https://www.npmjs.com/package/@rx-angular/cdk}\n */\nfunction toggle(object, key) {\n  const objectIsObject = isObjectGuard(object);\n  const keyIsValid = isKeyOf(key);\n  const initialObject = objectIsObject ? object : {};\n  if (!objectIsObject) {\n    console.warn(`Toggle: original value (${object}) is not an object.`);\n  }\n  if (!keyIsValid) {\n    console.warn(`Toggle: key argument (${key}) is invalid.`);\n  }\n  if (keyIsValid && typeof initialObject[key] !== 'boolean') {\n    console.warn(`Toggle: value of the key (${key}) is not a boolean.`);\n  }\n  if (!isDefined(object) && !keyIsValid) {\n    return object;\n  }\n  if (keyIsValid && (typeof initialObject[key] === 'boolean' || !initialObject.hasOwnProperty(key))) {\n    return Object.assign(Object.assign({}, initialObject), {\n      [key]: !initialObject[key]\n    });\n  }\n  return Object.assign({}, initialObject);\n}\n\n// eslint-disable-next-line @nrwl/nx/enforce-module-boundaries\n/**\n * @deprecated moved to `@rx-angular/cdk/transformations`\n * @see {@link https://www.npmjs.com/package/@rx-angular/cdk}\n */\nfunction slice(object, keys) {\n  const objectIsObject = isDefined(object) && isObjectGuard(object);\n  if (!objectIsObject) {\n    console.warn(`slice: original value (${object}) is not an object.`);\n    return undefined;\n  }\n  const sanitizedKeys = (Array.isArray(keys) ? keys : [keys]).filter(k => isKeyOf(k) && k in object);\n  if (!sanitizedKeys.length) {\n    console.warn(`slice: provided keys not found`);\n    return undefined;\n  }\n  return sanitizedKeys.reduce((acc, k) => Object.assign(Object.assign({}, acc), {\n    [k]: object[k]\n  }), {});\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { RxState, deleteProp, dictionaryToArray, extract, insert, patch, remove, setProp, slice, toDictionary, toggle, update, upsert };","map":{"version":3,"names":["i0","Injectable","createAccumulationObservable","createSideEffectObservable","safePluck","isKeyOf","select","isDefined","isObjectGuard","Subscription","isObservable","EMPTY","map","catchError","tap","RxState","constructor","subscription","accumulator","effectObservable","$","signal$","add","subscribe","ngOnDestroy","unsubscribe","setAccumulator","accumulatorFn","nextAccumulator","get","keys","hasStateAnyKeys","Object","state","length","undefined","set","keyOrStateOrProjectState","stateOrSliceProjectFn","nextSlice","Error","connect","keyOrInputOrSlice$","projectOrSlices$","projectValueFn","nextSliceObservable","project","slice$","pipe","v","key","value","assign","args","state$","hold","obsOrObsWithSideEffect","sideEffectFn","sideEffect","e","nextEffectObservable","ɵfac","ɵprov","type","insert","source","updates","updatesDefined","sourceIsNotArray","Array","isArray","invalidInput","console","warn","concat","defaultCompareFn","a","b","valuesComparer","original","incoming","compare","sanitizedKeys","filter","k","every","remove","scrap","scrapAsArray","existingItem","some","item","toDictionary","sourceEmpty","dictionary","i","update","updatesAsArray","sourceDefined","x","match","customFind","push","array","fn","extract","arrayIsArray","result","upsert","inserts","findIndex","sourceItem","updated","updatedItem","deleteProp","object","copy","dictionaryToArray","values","patch","upd","setProp","objectIsObject","keyIsValid","initialObject","toggle","hasOwnProperty","slice","reduce","acc"],"sources":["/home/sasha/Study/Work Assignements/flashenpost/Frontend/node_modules/@rx-angular/state/fesm2015/state.js"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable } from '@angular/core';\nimport { createAccumulationObservable, createSideEffectObservable, safePluck, isKeyOf, select, isDefined, isObjectGuard } from '@rx-angular/state/selections';\nexport * from '@rx-angular/state/selections';\nimport { Subscription, isObservable, EMPTY } from 'rxjs';\nimport { map, catchError, tap } from 'rxjs/operators';\n\n/**\n * @description\n * RxState is a light-weight reactive state management service for managing local state in angular.\n *\n * @example\n * Component({\n *   selector: 'app-stateful',\n *   template: `<div>{{ state$ | async | json }}</div>`,\n *   providers: [RxState]\n * })\n * export class StatefulComponent {\n *   readonly state$ = this.state.select();\n *\n *   constructor(private state: RxState<{ foo: string }>) {}\n * }\n *\n * @docsCategory RxState\n * @docsPage RxState\n */\nclass RxState {\n    /**\n     * @internal\n     */\n    constructor() {\n        this.subscription = new Subscription();\n        this.accumulator = createAccumulationObservable();\n        this.effectObservable = createSideEffectObservable();\n        /**\n         * @description\n         * The unmodified state exposed as `Observable<T>`. It is not shared, distinct or gets replayed.\n         * Use the `$` property if you want to read the state without having applied {@link stateful} to it.\n         */\n        this.$ = this.accumulator.signal$;\n        this.subscription.add(this.subscribe());\n    }\n    /**\n     * @internal\n     */\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n    /**\n     * @description\n     *\n     * Allows to customize state accumulation function.\n     * This can be helpful to implement deep updates and tackle other immutability problems in a custom way.\n     * @example\n     *\n     * ```typescript\n     * const myAccumulator = (state: MyState, slice: Partial<MyState>) => deepCopy(state, slice);\n     *\n     * this.state.setAccumulator(myAccumulator);\n     * ```\n     */\n    setAccumulator(accumulatorFn) {\n        this.accumulator.nextAccumulator(accumulatorFn);\n    }\n    /** @internal **/\n    get(...keys) {\n        const hasStateAnyKeys = Object.keys(this.accumulator.state).length > 0;\n        if (!!keys && keys.length) {\n            return safePluck(this.accumulator.state, keys);\n        }\n        else {\n            return hasStateAnyKeys\n                ? this.accumulator.state\n                : undefined;\n        }\n    }\n    /**\n     * @internal\n     */\n    set(keyOrStateOrProjectState, stateOrSliceProjectFn) {\n        if (typeof keyOrStateOrProjectState === 'object' &&\n            stateOrSliceProjectFn === undefined) {\n            this.accumulator.nextSlice(keyOrStateOrProjectState);\n            return;\n        }\n        if (typeof keyOrStateOrProjectState === 'function' &&\n            stateOrSliceProjectFn === undefined) {\n            this.accumulator.nextSlice(keyOrStateOrProjectState(this.accumulator.state));\n            return;\n        }\n        if (isKeyOf(keyOrStateOrProjectState) &&\n            typeof stateOrSliceProjectFn === 'function') {\n            const state = {};\n            state[keyOrStateOrProjectState] = stateOrSliceProjectFn(this.accumulator.state);\n            this.accumulator.nextSlice(state);\n            return;\n        }\n        throw new Error('wrong params passed to set');\n    }\n    /**\n     * @internal\n     */\n    connect(keyOrInputOrSlice$, projectOrSlices$, projectValueFn) {\n        if (projectValueFn === undefined &&\n            projectOrSlices$ === undefined &&\n            isObservable(keyOrInputOrSlice$)) {\n            this.accumulator.nextSliceObservable(keyOrInputOrSlice$);\n            return;\n        }\n        if (projectValueFn === undefined &&\n            typeof projectOrSlices$ === 'function' &&\n            isObservable(keyOrInputOrSlice$) &&\n            !isObservable(projectOrSlices$)) {\n            const project = projectOrSlices$;\n            const slice$ = keyOrInputOrSlice$.pipe(map((v) => project(this.get(), v)));\n            this.accumulator.nextSliceObservable(slice$);\n            return;\n        }\n        if (projectValueFn === undefined &&\n            isKeyOf(keyOrInputOrSlice$) &&\n            isObservable(projectOrSlices$)) {\n            const key = keyOrInputOrSlice$;\n            const slice$ = projectOrSlices$.pipe(map((value) => (Object.assign({}, { [key]: value }))));\n            this.accumulator.nextSliceObservable(slice$);\n            return;\n        }\n        if (typeof projectValueFn === 'function' &&\n            isKeyOf(keyOrInputOrSlice$) &&\n            isObservable(projectOrSlices$)) {\n            const key = keyOrInputOrSlice$;\n            const slice$ = projectOrSlices$.pipe(map((value) => (Object.assign({}, { [key]: projectValueFn(this.get(), value) }))));\n            this.accumulator.nextSliceObservable(slice$);\n            return;\n        }\n        throw new Error('wrong params passed to connect');\n    }\n    /**\n     * @internal\n     */\n    select(...args) {\n        return this.accumulator.state$.pipe(select(...args));\n    }\n    /**\n     * @description\n     * Manages side-effects of your state. Provide an `Observable<any>` **side-effect** and an optional\n     * `sideEffectFunction`.\n     * Subscription handling is done automatically.\n     *\n     * @example\n     * // Directly pass an observable side-effect\n     * const localStorageEffect$ = changes$.pipe(\n     *  tap(changes => storeChanges(changes))\n     * );\n     * state.hold(localStorageEffect$);\n     *\n     * // Pass an additional `sideEffectFunction`\n     *\n     * const localStorageEffectFn = changes => storeChanges(changes);\n     * state.hold(changes$, localStorageEffectFn);\n     *\n     * @param {Observable<S>} obsOrObsWithSideEffect\n     * @param {function} [sideEffectFn]\n     */\n    hold(obsOrObsWithSideEffect, sideEffectFn) {\n        const sideEffect = obsOrObsWithSideEffect.pipe(catchError((e) => EMPTY));\n        if (typeof sideEffectFn === 'function') {\n            this.effectObservable.nextEffectObservable(sideEffect.pipe(tap(sideEffectFn)));\n            return;\n        }\n        this.effectObservable.nextEffectObservable(sideEffect);\n    }\n    /**\n     * @internal\n     */\n    subscribe() {\n        const subscription = new Subscription();\n        subscription.add(this.accumulator.subscribe());\n        subscription.add(this.effectObservable.subscribe());\n        return subscription;\n    }\n}\n/** @nocollapse */ RxState.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: RxState, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ RxState.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: RxState });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: RxState, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return []; } });\n\n// eslint-disable-next-line @nrwl/nx/enforce-module-boundaries\n/**\n * @deprecated moved to `@rx-angular/cdk/transformations`\n * @see {@link https://www.npmjs.com/package/@rx-angular/cdk}\n */\nfunction insert(source, updates) {\n    const updatesDefined = isDefined(updates);\n    const sourceIsNotArray = !Array.isArray(source);\n    const invalidInput = sourceIsNotArray && !updatesDefined;\n    if (sourceIsNotArray && isDefined(source)) {\n        console.warn(`Insert: Original value (${source}) is not an array.`);\n    }\n    if (invalidInput) {\n        return source;\n    }\n    return (sourceIsNotArray ? [] : source).concat(updatesDefined ? (Array.isArray(updates) ? updates : [updates]) : []);\n}\n\n// eslint-disable-next-line @nrwl/nx/enforce-module-boundaries\nconst defaultCompareFn = (a, b) => a === b;\n/**\n * @deprecated moved to `@rx-angular/cdk/transformations`\n * @see {@link https://www.npmjs.com/package/@rx-angular/cdk}\n */\nfunction valuesComparer(original, incoming, compare) {\n    if (isKeyOf(compare)) {\n        return original[compare] === incoming[compare];\n    }\n    if (Array.isArray(compare)) {\n        const sanitizedKeys = compare.filter((k) => isKeyOf(k));\n        return sanitizedKeys.length > 0\n            ? sanitizedKeys.every((k) => original[k] === incoming[k])\n            : defaultCompareFn(original, incoming);\n    }\n    return (compare || defaultCompareFn)(original, incoming);\n}\n\n// eslint-disable-next-line @nrwl/nx/enforce-module-boundaries\n/**\n * @deprecated moved to `@rx-angular/cdk/transformations`\n * @see {@link https://www.npmjs.com/package/@rx-angular/cdk}\n */\nfunction remove(source, scrap, compare) {\n    const scrapAsArray = isDefined(scrap)\n        ? Array.isArray(scrap)\n            ? scrap\n            : [scrap]\n        : [];\n    const invalidInput = !Array.isArray(source);\n    if (invalidInput) {\n        console.warn(`Remove: original value (${source}) is not an array`);\n        return source;\n    }\n    return source.filter((existingItem) => {\n        return !scrapAsArray.some((item) => valuesComparer(item, existingItem, compare));\n    });\n}\n\n// eslint-disable-next-line @nrwl/nx/enforce-module-boundaries\n/**\n * @deprecated moved to `@rx-angular/cdk/transformations`\n * @see {@link https://www.npmjs.com/package/@rx-angular/cdk}\n */\nfunction toDictionary(source, key) {\n    if (!isDefined(source)) {\n        return source;\n    }\n    const sourceEmpty = !source.length;\n    if (!Array.isArray(source) || sourceEmpty || !isKeyOf(source[0][key])) {\n        if (!sourceEmpty) {\n            console.warn('ToDictionary: unexpected input params.');\n        }\n        return {};\n    }\n    const dictionary = {};\n    const length = source.length;\n    let i = 0;\n    for (i; i < length; i++) {\n        dictionary[`${source[i][key]}`] = Object.assign({}, source[i]);\n    }\n    return dictionary;\n}\n\n/**\n * @deprecated moved to `@rx-angular/cdk/transformations`\n * @see {@link https://www.npmjs.com/package/@rx-angular/cdk}\n */\nfunction update(source, updates, compare) {\n    const updatesDefined = updates != null;\n    const updatesAsArray = updatesDefined\n        ? Array.isArray(updates)\n            ? updates\n            : [updates]\n        : [];\n    const sourceDefined = source != null;\n    const sourceIsNotArray = !Array.isArray(source);\n    const invalidInput = sourceIsNotArray || source.length === 0 || updatesAsArray.length === 0;\n    if (sourceDefined && sourceIsNotArray) {\n        console.warn(`Update: Original value (${source}) is not an array.`);\n    }\n    if (invalidInput) {\n        return source;\n    }\n    const x = [];\n    for (const existingItem of source) {\n        const match = customFind(updatesAsArray, (item) => valuesComparer(item, existingItem, compare));\n        x.push(match ? Object.assign(Object.assign({}, existingItem), match) : existingItem);\n    }\n    return x;\n}\nfunction customFind(array, fn) {\n    for (const item of array) {\n        const x = fn(item);\n        if (x) {\n            return item;\n        }\n    }\n}\n\n// eslint-disable-next-line @nrwl/nx/enforce-module-boundaries\n/**\n * @deprecated moved to `@rx-angular/cdk/transformations`\n * @see {@link https://www.npmjs.com/package/@rx-angular/cdk}\n */\nfunction extract(array, keys) {\n    const arrayIsArray = isDefined(array) && Array.isArray(array);\n    if (!arrayIsArray) {\n        console.warn(`extract: original value (${array}) is not an array.`);\n        return undefined;\n    }\n    const sanitizedKeys = (Array.isArray(keys) ? keys : [keys]).filter((k) => isKeyOf(k) && array.some((i) => k in i));\n    const length = sanitizedKeys.length;\n    if (!sanitizedKeys.length) {\n        console.warn(`extract: provided keys not found`);\n        return undefined;\n    }\n    return array.map((item) => {\n        let i = 0;\n        const result = {};\n        for (i; i < length; i++) {\n            result[sanitizedKeys[i]] = item[sanitizedKeys[i]];\n        }\n        return result;\n    });\n}\n\n// eslint-disable-next-line @nrwl/nx/enforce-module-boundaries\n/**\n * @deprecated moved to `@rx-angular/cdk/transformations`\n * @see {@link https://www.npmjs.com/package/@rx-angular/cdk}\n */\nfunction upsert(source, update, compare) {\n    // check inputs for validity\n    const updatesAsArray = update != null ? (Array.isArray(update) ? update : [update]) : [];\n    // check inputs for validity\n    const sourceIsNotArray = !Array.isArray(source);\n    const invalidInput = sourceIsNotArray && updatesAsArray.length === 0;\n    // if the source value is not an Array or the input is not defined return the original source\n    // this is the case for any edge case:\n    // '', null, undefined, CustomObjectOfDoomAndDarkness, ...\n    if (invalidInput) {\n        return source;\n    }\n    // if source is empty array or not an array, but the updates are valid:\n    // return a shallow copy of the updates as result\n    if (updatesAsArray.length > 0 && (sourceIsNotArray || source.length === 0)) {\n        return [...updatesAsArray];\n    }\n    const inserts = [];\n    const updates = {};\n    // process updates/inserts\n    for (const item of updatesAsArray) {\n        const match = source.findIndex((sourceItem) => valuesComparer(item, sourceItem, compare));\n        // if item already exists, save it as update\n        if (match !== -1) {\n            updates[match] = item;\n        }\n        else {\n            // otherwise consider this as insert\n            if (isObjectGuard(item)) {\n                // create a shallow copy if item is an object\n                inserts.push(Object.assign({}, item));\n            }\n            else {\n                // otherwise just push it\n                inserts.push(item);\n            }\n        }\n    }\n    const updated = source.map((item, i) => {\n        const updatedItem = updates[i];\n        // process the updated\n        if (updatedItem !== null && updatedItem !== undefined) {\n            if (isObjectGuard(item)) {\n                return Object.assign(Object.assign({}, item), updatedItem);\n            }\n            else {\n                return updatedItem;\n            }\n        }\n        return item;\n    });\n    // return the combination of the updated source & the inserts as new array\n    return updated.concat(inserts);\n}\n\n// eslint-disable-next-line @nrwl/nx/enforce-module-boundaries\n/**\n * @deprecated moved to `@rx-angular/cdk/transformations`\n * @see {@link https://www.npmjs.com/package/@rx-angular/cdk}\n */\nfunction deleteProp(object, key) {\n    if (!isDefined(object) || !isObjectGuard(object)) {\n        console.warn(`DeleteProp: original value ${object} is not an object.`);\n        return object;\n    }\n    if (!isKeyOf(key)) {\n        console.warn(`DeleteProp: provided key is not a string, number or symbol.`);\n        return Object.assign({}, object);\n    }\n    const copy = Object.assign({}, object);\n    delete copy[key];\n    return copy;\n}\n\n// eslint-disable-next-line @nrwl/nx/enforce-module-boundaries\n/**\n * @deprecated moved to `@rx-angular/cdk/transformations`\n * @see {@link https://www.npmjs.com/package/@rx-angular/cdk}\n */\nfunction dictionaryToArray(dictionary) {\n    if (!isDefined(dictionary)) {\n        return dictionary;\n    }\n    if (!isObjectGuard(dictionary)) {\n        console.warn(`DictionaryToArray: unexpected input.`);\n        return [];\n    }\n    return Object.values(dictionary);\n}\n\n// eslint-disable-next-line @nrwl/nx/enforce-module-boundaries\n/**\n * @deprecated moved to `@rx-angular/cdk/transformations`\n * @see {@link https://www.npmjs.com/package/@rx-angular/cdk}\n */\nfunction patch(object, upd) {\n    const update = isObjectGuard(upd) ? upd : {};\n    if (!isObjectGuard(object) && isObjectGuard(upd)) {\n        console.warn(`Patch: original value ${object} is not an object.`);\n        return Object.assign({}, update);\n    }\n    if (!isObjectGuard(object) && !isObjectGuard(upd)) {\n        console.warn(`Patch: original value ${object} and updates ${upd} are not objects.`);\n        return object;\n    }\n    return Object.assign(Object.assign({}, object), update);\n}\n\n// eslint-disable-next-line @nrwl/nx/enforce-module-boundaries\n/**\n * @deprecated moved to `@rx-angular/cdk/transformations`\n * @see {@link https://www.npmjs.com/package/@rx-angular/cdk}\n */\nfunction setProp(object, key, value) {\n    const objectIsObject = isObjectGuard(object);\n    const keyIsValid = isKeyOf(key);\n    const initialObject = objectIsObject ? object : {};\n    if (!objectIsObject) {\n        console.warn(`SetProp: original value (${object}) is not an object.`);\n    }\n    if (!keyIsValid) {\n        console.warn(`SetProp: key argument (${key}) is invalid.`);\n    }\n    if (!isDefined(object) && !keyIsValid) {\n        return object;\n    }\n    if (keyIsValid) {\n        return Object.assign(Object.assign({}, initialObject), { [key]: value });\n    }\n    return Object.assign({}, initialObject);\n}\n\n// eslint-disable-next-line @nrwl/nx/enforce-module-boundaries\n/**\n * @deprecated moved to `@rx-angular/cdk/transformations`\n * @see {@link https://www.npmjs.com/package/@rx-angular/cdk}\n */\nfunction toggle(object, key) {\n    const objectIsObject = isObjectGuard(object);\n    const keyIsValid = isKeyOf(key);\n    const initialObject = objectIsObject ? object : {};\n    if (!objectIsObject) {\n        console.warn(`Toggle: original value (${object}) is not an object.`);\n    }\n    if (!keyIsValid) {\n        console.warn(`Toggle: key argument (${key}) is invalid.`);\n    }\n    if (keyIsValid && typeof initialObject[key] !== 'boolean') {\n        console.warn(`Toggle: value of the key (${key}) is not a boolean.`);\n    }\n    if (!isDefined(object) && !keyIsValid) {\n        return object;\n    }\n    if (keyIsValid &&\n        (typeof initialObject[key] === 'boolean' ||\n            !initialObject.hasOwnProperty(key))) {\n        return Object.assign(Object.assign({}, initialObject), { [key]: !initialObject[key] });\n    }\n    return Object.assign({}, initialObject);\n}\n\n// eslint-disable-next-line @nrwl/nx/enforce-module-boundaries\n/**\n * @deprecated moved to `@rx-angular/cdk/transformations`\n * @see {@link https://www.npmjs.com/package/@rx-angular/cdk}\n */\nfunction slice(object, keys) {\n    const objectIsObject = isDefined(object) && isObjectGuard(object);\n    if (!objectIsObject) {\n        console.warn(`slice: original value (${object}) is not an object.`);\n        return undefined;\n    }\n    const sanitizedKeys = (Array.isArray(keys) ? keys : [keys]).filter((k) => isKeyOf(k) && k in object);\n    if (!sanitizedKeys.length) {\n        console.warn(`slice: provided keys not found`);\n        return undefined;\n    }\n    return sanitizedKeys.reduce((acc, k) => (Object.assign(Object.assign({}, acc), { [k]: object[k] })), {});\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { RxState, deleteProp, dictionaryToArray, extract, insert, patch, remove, setProp, slice, toDictionary, toggle, update, upsert };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}